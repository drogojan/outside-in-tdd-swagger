/* 
 * Marketing Cloud REST API
 *
 * Marketing Cloud's REST API is our newest API. It supports multi-channel use cases, is much more lightweight and easy to use than our SOAP API, and is getting more comprehensive with every release.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: mc_sdk@salesforce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Salesforce.MarketingCloud.Client;
using Salesforce.MarketingCloud.Api;
using Salesforce.MarketingCloud.Model;

namespace Salesforce.MarketingCloud.Test
{
    /// <summary>
    ///  Class for testing CampaignApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CampaignApiTests
    {
        private CampaignApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CampaignApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CampaignApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CampaignApi
            //Assert.IsInstanceOfType(typeof(CampaignApi), instance, "instance is a CampaignApi");
        }

        
        /// <summary>
        /// Test CreateCampaign
        /// </summary>
        [Test]
        public void CreateCampaignTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Campaign body = null;
            //var response = instance.CreateCampaign(body);
            //Assert.IsInstanceOf<Campaign> (response, "response is Campaign");
        }
        
        /// <summary>
        /// Test DeleteCampaignById
        /// </summary>
        [Test]
        public void DeleteCampaignByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteCampaignById(id);
            
        }
        
        /// <summary>
        /// Test GetAllCampaigns
        /// </summary>
        [Test]
        public void GetAllCampaignsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllCampaigns();
            //Assert.IsInstanceOf<GetAllCampaignsResponse> (response, "response is GetAllCampaignsResponse");
        }
        
        /// <summary>
        /// Test GetCampaignById
        /// </summary>
        [Test]
        public void GetCampaignByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetCampaignById(id);
            //Assert.IsInstanceOf<Campaign> (response, "response is Campaign");
        }
        
    }

}
